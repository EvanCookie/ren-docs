import{_ as i,c as a,a5 as n,o as t}from"./chunks/framework.DeASWWRe.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"git/commit_messages.md","filePath":"git/commit_messages.md","lastUpdated":1723555478000}'),p={name:"git/commit_messages.md"};function l(e,s,h,k,E,o){return t(),a("div",null,s[0]||(s[0]=[n(`<h2 id="_1-前言" tabindex="-1">1. 前言 <a class="header-anchor" href="#_1-前言" aria-label="Permalink to &quot;1. 前言&quot;">​</a></h2><p>在我们目前的前端项目中，我们采用 <code>git</code> 作为版本控制工具。使用 <code>git</code> 管理项目意味着我们经常需要提交代码。当我们执行 <code>git commit -m &quot;描述信息&quot;</code> 命令时，我们被要求提供一个描述信息。然而，由于每个人的理解和表达方式不同，提交信息的多样性有时会导致信息的模糊和不明确。</p><p>为了提高团队的协作效率和代码质量，我们需要建立一套统一的提交规范，确保每次提交的信息都是清晰、一致且具有描述性的。如下图</p><p><img src="https://cdn.jsdelivr.net/gh/EvanCookie/pictureBed@master/git/commit_messages/messages.png" alt="" loading="lazy"></p><h2 id="_2-提交规范" tabindex="-1">2. 提交规范 <a class="header-anchor" href="#_2-提交规范" aria-label="Permalink to &quot;2. 提交规范&quot;">​</a></h2><p>目前规范用的比较多的是 <a href="https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#-git-commit-guidelines" target="_blank" rel="noreferrer">Angular 团队的规范</a>格式如下：</p><p>每个提交信息由header、body和footer组成。header 有一个特殊的格式，包括type、scope和subject</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;</span></span>
<span class="line"><span>&lt;BLANK LINE&gt; 空行</span></span>
<span class="line"><span>&lt;body&gt;</span></span>
<span class="line"><span>&lt;BLANK LINE&gt; 空行</span></span>
<span class="line"><span>&lt;footer&gt;</span></span></code></pre></div><p><strong>类型（type）：</strong></p><ul><li><strong>feat</strong>: 新功能</li><li><strong>fix</strong>: bug修复</li><li><strong>docs</strong>: 仅文档的更改（文档更新）</li><li><strong>style</strong>: 不影响代码含义的更改(空白、格式化、缺少分号等)</li><li><strong>refactor</strong>: 既不修复错误（bug）也不增加功能的代码更改</li><li><strong>perf</strong>: 改进性能的代码更改</li><li><strong>test</strong>: 添加缺失的测试或更正现有的测试</li><li><strong>chore</strong>: 对构建过程或辅助工具和库(如文档生成)的更改</li></ul><p><strong>范围（scope）：</strong></p><p>指定提交更改位置的任何内容（提交影响的代码模块或功能区域）。</p><div class="tip custom-block"><p class="custom-block-title">提示</p><p>You can use * when the change affects more than a single scope. （当更改影响多个作用域时，可以使用*）。</p></div><p><strong>主题（subject）：</strong></p><p>主题包含对变化的简洁描述:</p><ul><li>使用祈使句，现在时:&quot;change&quot;而不是&quot;changed&quot;也不是&quot;changes&quot;</li><li>第一个字母不要大写</li><li>末尾没有点(.)</li></ul><p><strong>身体（body）：</strong></p><p>身体应该提供更详细的描述：包括改变的动机，并将其与之前的进行对比。</p><p><strong>页脚（footer）：</strong></p><p>页脚应该包含有关突破性更改的任何信息，通常是 BREAKING CHANGE 或修复的 issue 链接</p><p>例如：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>feat(login): Add login authorization feature</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Update the login process to include enterprise authorization.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Closes issue #188.</span></span></code></pre></div><h2 id="_3-commitizen-工具" tabindex="-1">3. Commitizen（工具） <a class="header-anchor" href="#_3-commitizen-工具" aria-label="Permalink to &quot;3. Commitizen（工具）&quot;">​</a></h2><h3 id="_3-1-简介" tabindex="-1">3.1 简介 <a class="header-anchor" href="#_3-1-简介" aria-label="Permalink to &quot;3.1 简介&quot;">​</a></h3><p><a href="https://github.com/commitizen/cz-cli" target="_blank" rel="noreferrer">Commitizen</a>（cz-cli）是一个命令行工具，它帮助开发者遵循某种提交消息规范（如Angular、Conventional Commits等）来格式化Git提交信息。他提供了一个命令 <code>git cz</code>，它替代了传统的<code>git commit</code>命令。</p><p>Commitizen 需要适配器来遵循特定的提交规范。Commitizen 本身是一个框架，它提供了一个命令行界面来引导开发者填写 Git 提交信息。然而，Commitizen 本身并不定义提交信息的具体格式或规范；它依赖于适配器来解析和验证提交信息是否符合特定的规范。</p><h3 id="_3-2-使用" tabindex="-1">3.2 使用 <a class="header-anchor" href="#_3-2-使用" aria-label="Permalink to &quot;3.2 使用&quot;">​</a></h3><p>要在项目中使用Commitizen，通常需要执行以下步骤：</p><p>第一步：全局安装Commitizen工具（cz-cli）。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commitizen</span></span></code></pre></div><p>第二步：安装 cz-customizable 适配器（也可搭配其他适配器使用）</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cz-customizable</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --save-dev</span></span></code></pre></div><p>第三步：配置 Commitizen</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;config&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;commitizen&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;path&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;node_modules/cz-customizable&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/EvanCookie/pictureBed@master/git/commit_messages/packageJSON.png" alt="img" loading="lazy"></p><p>第四步：在项目根目录下创建 <code>.cz-config.js</code> 文件</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 可选类型</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  types: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    { value: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;feat&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;feat: 新功能&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    { value: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;fix&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;fix: 修复&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    { value: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;docs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;docs: 文档更新&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      value: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;style&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;style: 不影响代码含义的更改(空白、格式化、缺少分号等)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      value: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;refactor&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;refactor: 重构(既不修复错误bug也不增加功能的代码更改)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    { value: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;perf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;perf: 改进性能的代码更改&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    { value: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test: 增加测试&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    { value: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;chore&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;chore: 构建过程或辅助工具的变动&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    { value: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;revert&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;revert: 回退&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    { value: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;build&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;build: 打包&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 定义你的作用域列表(省略此字段，则作用域将是可选的)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  scopes: [  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 你可以列出项目中的模块、组件或其他分类作为作用域选项。  </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;docs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 或者使用通配符来允许自定义作用域  </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;*&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 消息步骤</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  messages: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;请选择提交类型:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    customScope: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;请输入修改范围(可选):&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    subject: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;请简要描述提交(必填):&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    body: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;请输入详细描述(可选):&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    footer: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;请输入要关闭的issue(可选):&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    confirmCommit: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;确认使用以上信息提交？(y/n/e/h)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 跳过步骤</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  skipQuestions: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;body&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;footer&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // subject文字长度默认是72</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  subjectLimit: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">72</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>5、使用git cz 代替git commit来创建提交</p><p><img src="https://cdn.jsdelivr.net/gh/EvanCookie/pictureBed@master/git/commit_messages/git-cz.png" alt="img" loading="lazy"></p>`,39)]))}const g=i(p,[["render",l]]);export{d as __pageData,g as default};
